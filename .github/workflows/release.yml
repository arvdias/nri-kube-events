name: Release
on:
  release:
    types:
      # works for building pre-releases
      - published
      # works for releases and changing from pre-release to release
      - released

env: 
 
  DOCKER_IMAGE_NAME: newrelic/nri-kube-events
  RELEASE_VERSION: ${{ github.event.release.name }}
  S3_PATH: s3://nr-downloads-main/infrastructure_agent

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Extract version from release tag
        run: |
          RELEASE_VERSION="$(echo $RELEASE_VERSION | grep -oE '([0-9.]*[0-9])$')"
          echo "RELEASE_VERSION=$RELEASE_VERSION">> $GITHUB_ENV
          
          DOCKER_IMAGE_NAME="$DOCKER_IMAGE_NAME:$RELEASE_VERSION"
          echo "DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME" >> $GITHUB_ENV
          
      - name: Test for prerelase
        if: "github.event.release.prerelease"
        run: |
          DOCKER_IMAGE_NAME="$DOCKER_IMAGE_NAME-pre"
          echo "DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME" >> $GITHUB_ENV

          S3_PATH="$S3_PATH/test"
          echo "S3_PATH=$S3_PATH" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        run: |
          make docker-build
          docker push $DOCKER_IMAGE_NAME
      
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Upload manifest to S3
        run: |
          aws s3 cp deploy/nri-kube-events.yaml $S3_PATH/integrations/kubernetes/nri-kube-events-${{ env.RELEASE_VERSION }}.yaml"
          aws s3 cp deploy/nri-kube-events.yaml $S3_PATH/integrations/kubernetes/nri-kube-events-latest.yaml"
